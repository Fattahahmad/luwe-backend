{
  "info": {
    "name": "Luwe Recipe API - Complete Collection",
    "description": "üç≥ **Luwe Recipe API Documentation**\n\n## üìã **Setup Instructions:**\n1. Set `base_url` variable to your server URL:\n   - **Local**: `http://localhost/luwe/public`\n   - **Network**: `http://YOUR_IP/luwe/public` (e.g., `http://192.168.1.100/luwe/public`)\n2. Login to get auth token\n3. Set `auth_token` variable with received token\n\n## üåê **Cross-Device Access Guide:**\n\n### **For Different Device Access:**\n1. **Find Server IP**: Run `ipconfig` (Windows) or `ifconfig` (Mac/Linux)\n2. **Update base_url**: Change from `localhost` to actual IP\n3. **Network Requirements**: Both devices must be on same WiFi/LAN\n4. **Test First**: Use Debug Routes ‚Üí API Debug Test\n5. **Firewall**: Ensure port 80 is open on server\n\n### **Common Issues:**\n- ‚ùå `failed to fetch`: CORS or network issue\n- ‚ùå `Connection refused`: Server not accessible from client\n- ‚ùå `Timeout`: Firewall blocking or wrong IP\n- ‚úÖ **Solution**: Use debug endpoints for troubleshooting\n\n## üîê **Authentication:**\n- All endpoints (except register/login) require Bearer token\n- Token expires after some time, re-login if needed\n\n## üìù **Form Data Usage:**\n- ALL requests use form-data (NO raw JSON)\n- File uploads use form-data with file type\n\n## üç¥ **Recipe Creation Guide:**\n\n### **Required Fields:**\n- `title`: Recipe name\n- `description`: Recipe description\n- `cooking_time`: Time in minutes\n- `category`: Recipe category (appetizer, main_course, dessert)\n- `thumbnail`: Main recipe image (REQUIRED)\n\n### **Multiple Images (Optional):**\n- `images[0]`: Additional image 1\n- `images[1]`: Additional image 2\n- `images[2]`: Additional image 3\n- `images[3]`: Additional image 4\n- Maximum: 1 thumbnail + 4 additional images\n\n### **Steps:**\n- `steps[0][instruction]`: Step 1\n- `steps[1][instruction]`: Step 2\n- Add more as needed: `steps[N][instruction]`\n\n### **Alat (Cooking Tools):**\n- Get available tools from `/api/alats`\n- Format: `alats[0][id]` = tool ID, `alats[0][amount]` = quantity\n- Example: `alats[0][id]=1`, `alats[0][amount]=1 buah`\n\n### **Bahan (Ingredients):**\n- Get available ingredients from `/api/bahans`\n- Format: `bahans[0][id]` = ingredient ID, `bahans[0][amount]` = quantity, `bahans[0][unit]` = unit\n- Example: `bahans[0][id]=1`, `bahans[0][amount]=250`, `bahans[0][unit]=gram`\n\n## üìä **Pagination:**\n- All list endpoints support pagination\n- Default: 10 items per page (recipes, favorites, my-recipes)\n- Notifications: 20 items per page\n- Explore: 12 groups per page\n- Parameters: `page`, `per_page`, `search`, `sort_by`, `min_recipes`\n\n## üîç **Explore Feature:**\n- Groups recipes by first word similarity\n- Supports category filtering (all, appetizer, main_course, dessert)\n- Pagination and search enabled\n- Sorting options: count, name, recent\n- Minimum recipes per group configurable\n\n## ü§ñ **MOORA Recommendations:**\n- **SPK (Sistem Pendukung Keputusan)** for recipe recommendations\n- **Multi-criteria optimization** using MOORA algorithm\n- **Form-data format**: `available_ingredients[]`, `min_cooking_time`, `max_cooking_time`\n- **Ingredient availability** (70% weight) + **Time efficiency** (30% weight)\n- **No authentication required** for easy testing\n\n## üîî **Notifications:**\n- Auto-generated when users favorite recipes\n- Support unread filtering: `?unread_only=true`\n- Include profile pictures and recipe thumbnails\n\n## üìè **Units System:**\n- Dynamic units per ingredient type\n- Categories: volume, weight, count, spices\n- Get units: `/api/units` or `/api/bahans/{id}/units`\n\n## üñºÔ∏è **Images:**\n- Profile pictures: `/api/image/{filename}`\n- Recipe images: `/images/recipes/{filename}`\n- Auto-fallback to default images if not found\n\n## üîß **Troubleshooting:**\n- Use **Debug Routes** folder for connectivity testing\n- API Debug Test: Basic connectivity check\n- CORS Test: Cross-origin request testing\n- Check image endpoints for file serving issues",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "name",
                  "value": "Test User",
                  "type": "text"
                },
                {
                  "key": "email",
                  "value": "testuser@example.com",
                  "type": "text"
                },
                {
                  "key": "password",
                  "value": "password123",
                  "type": "text"
                },
                {
                  "key": "password_confirmation",
                  "value": "password123",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/register",
              "host": ["{{base_url}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "email",
                  "value": "test@example.com",
                  "type": "text"
                },
                {
                  "key": "password",
                  "value": "password",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/login",
              "host": ["{{base_url}}"],
              "path": ["api", "login"]
            }
          }
        },
        {
          "name": "Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "profile"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "logout"]
            }
          }
        },
        {
          "name": "Update Profile Picture",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "profile_picture",
                  "type": "file",
                  "src": ""
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/profile/picture",
              "host": ["{{base_url}}"],
              "path": ["api", "profile", "picture"]
            }
          }
        }
      ]
    },
    {
      "name": "Recipes",
      "item": [
        {
          "name": "Get All Recipes",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/recipes",
              "host": ["{{base_url}}"],
              "path": ["api", "recipes"]
            },
            "description": "Get all recipes with pagination (10 per page). Add ?page=2 for next page"
          }
        },
        {
          "name": "Get All Recipes with Pagination",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/recipes?page=2",
              "host": ["{{base_url}}"],
              "path": ["api", "recipes"],
              "query": [
                {
                  "key": "page",
                  "value": "2",
                  "description": "Page number for pagination"
                }
              ]
            },
            "description": "Example of pagination - get page 2 of recipes"
          }
        },
        {
          "name": "Search Recipes",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/recipes?search=telur",
              "host": ["{{base_url}}"],
              "path": ["api", "recipes"],
              "query": [
                {
                  "key": "search",
                  "value": "telur"
                }
              ]
            }
          }
        },
        {
          "name": "Get Recipe Detail",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/recipes/1",
              "host": ["{{base_url}}"],
              "path": ["api", "recipes", "1"]
            }
          }
        },
        {
          "name": "Get Newest Recipes",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/recipes/newest",
              "host": ["{{base_url}}"],
              "path": ["api", "recipes", "newest"]
            },
            "description": "üî• Get newest recipes ordered by creation date (latest first)"
          }
        },
        {
          "name": "Get Newest Recipes with Pagination",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/recipes/newest?page=1&per_page=5",
              "host": ["{{base_url}}"],
              "path": ["api", "recipes", "newest"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "5"
                }
              ]
            },
            "description": "üî• Get newest recipes with pagination and per_page control"
          }
        },
        {
          "name": "Get Recipes by Category - Appetizer",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/recipes/category/appetizer",
              "host": ["{{base_url}}"],
              "path": ["api", "recipes", "category", "appetizer"]
            },
            "description": "ü•ó Get all appetizer recipes"
          }
        },
        {
          "name": "Get Recipes by Category - Main Course",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/recipes/category/main_course",
              "host": ["{{base_url}}"],
              "path": ["api", "recipes", "category", "main_course"]
            },
            "description": "üçΩÔ∏è Get all main course recipes"
          }
        },
        {
          "name": "Get Recipes by Category - Dessert",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/recipes/category/dessert",
              "host": ["{{base_url}}"],
              "path": ["api", "recipes", "category", "dessert"]
            },
            "description": "üç∞ Get all dessert recipes"
          }
        },
        {
          "name": "Create Recipe",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "title",
                  "value": "Nasi Goreng Spesial",
                  "type": "text",
                  "description": "Judul resep"
                },
                {
                  "key": "description",
                  "value": "Nasi goreng dengan telur dan sayuran segar yang lezat",
                  "type": "text",
                  "description": "Deskripsi resep"
                },
                {
                  "key": "cooking_time",
                  "value": "20",
                  "type": "text",
                  "description": "Waktu memasak dalam menit"
                },
                {
                  "key": "category",
                  "value": "main_course",
                  "type": "text",
                  "description": "Kategori resep: appetizer, main_course, atau dessert"
                },
                {
                  "key": "thumbnail",
                  "type": "file",
                  "src": "",
                  "description": "WAJIB: Foto utama resep (thumbnail)"
                },
                {
                  "key": "images[0]",
                  "type": "file",
                  "src": "",
                  "description": "OPSIONAL: Foto tambahan 1"
                },
                {
                  "key": "images[1]",
                  "type": "file",
                  "src": "",
                  "description": "OPSIONAL: Foto tambahan 2"
                },
                {
                  "key": "images[2]",
                  "type": "file",
                  "src": "",
                  "description": "OPSIONAL: Foto tambahan 3"
                },
                {
                  "key": "images[3]",
                  "type": "file",
                  "src": "",
                  "description": "OPSIONAL: Foto tambahan 4 (maksimal 4 foto tambahan)"
                },
                {
                  "key": "steps[0][instruction]",
                  "value": "Panaskan minyak di wajan dengan api sedang",
                  "type": "text",
                  "description": "Langkah 1"
                },
                {
                  "key": "steps[1][instruction]",
                  "value": "Masukkan telur, orak-arik hingga matang",
                  "type": "text",
                  "description": "Langkah 2"
                },
                {
                  "key": "steps[2][instruction]",
                  "value": "Masukkan nasi dan aduk rata dengan telur",
                  "type": "text",
                  "description": "Langkah 3"
                },
                {
                  "key": "steps[3][instruction]",
                  "value": "Tambahkan kecap manis dan sayuran, aduk hingga matang",
                  "type": "text",
                  "description": "Langkah 4"
                },
                {
                  "key": "alats[0][id]",
                  "value": "1",
                  "type": "text",
                  "description": "ID alat dari /api/alats (contoh: 1=Wajan)"
                },
                {
                  "key": "alats[0][amount]",
                  "value": "1 buah",
                  "type": "text",
                  "description": "Jumlah alat yang dibutuhkan"
                },
                {
                  "key": "alats[1][id]",
                  "value": "2",
                  "type": "text",
                  "description": "ID alat kedua (contoh: 2=Spatula)"
                },
                {
                  "key": "alats[1][amount]",
                  "value": "1 buah",
                  "type": "text",
                  "description": "Jumlah alat kedua"
                },
                {
                  "key": "bahans[0][id]",
                  "value": "1",
                  "type": "text",
                  "description": "ID bahan dari /api/bahans (contoh: 1=Nasi)"
                },
                {
                  "key": "bahans[0][amount]",
                  "value": "250",
                  "type": "text",
                  "description": "Jumlah bahan yang dibutuhkan (angka saja)"
                },
                {
                  "key": "bahans[0][unit]",
                  "value": "gram",
                  "type": "text",
                  "description": "Satuan bahan (gram, ml, buah, sdm, dll)"
                },
                {
                  "key": "bahans[1][id]",
                  "value": "2",
                  "type": "text",
                  "description": "ID bahan kedua (contoh: 2=Telur)"
                },
                {
                  "key": "bahans[1][amount]",
                  "value": "2",
                  "type": "text",
                  "description": "Jumlah bahan kedua"
                },
                {
                  "key": "bahans[1][unit]",
                  "value": "butir",
                  "type": "text",
                  "description": "Satuan bahan kedua"
                },
                {
                  "key": "bahans[2][id]",
                  "value": "3",
                  "type": "text",
                  "description": "ID bahan ketiga (contoh: 3=Kecap Manis)"
                },
                {
                  "key": "bahans[2][amount]",
                  "value": "2",
                  "type": "text",
                  "description": "Jumlah bahan ketiga"
                },
                {
                  "key": "bahans[2][unit]",
                  "value": "sdm",
                  "type": "text",
                  "description": "Satuan bahan ketiga"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/recipes",
              "host": ["{{base_url}}"],
              "path": ["api", "recipes"]
            }
          }
        },
        {
          "name": "Update Recipe",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "_method",
                  "value": "PUT",
                  "type": "text"
                },
                {
                  "key": "title",
                  "value": "Nasi Goreng Updated",
                  "type": "text"
                },
                {
                  "key": "description",
                  "value": "Nasi goreng dengan telur dan sayuran - updated",
                  "type": "text"
                },
                {
                  "key": "cooking_time",
                  "value": "25",
                  "type": "text"
                },
                {
                  "key": "category",
                  "value": "main_course",
                  "type": "text",
                  "description": "Category: appetizer, main_course, atau dessert"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/recipes/1",
              "host": ["{{base_url}}"],
              "path": ["api", "recipes", "1"]
            }
          }
        },
        {
          "name": "Delete Recipe",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/recipes/1",
              "host": ["{{base_url}}"],
              "path": ["api", "recipes", "1"]
            }
          }
        }
      ]
    },
    {
      "name": "Favorites",
      "item": [
        {
          "name": "Get My Favorites",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/favorites",
              "host": ["{{base_url}}"],
              "path": ["api", "favorites"]
            }
          }
        },
        {
          "name": "Add to Favorites",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/recipes/1/favorite",
              "host": ["{{base_url}}"],
              "path": ["api", "recipes", "1", "favorite"]
            }
          }
        },
        {
          "name": "Remove from Favorites",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/recipes/1/favorite",
              "host": ["{{base_url}}"],
              "path": ["api", "recipes", "1", "favorite"]
            }
          }
        }
      ]
    },
    {
      "name": "Notifications",
      "item": [
        {
          "name": "Get All Notifications",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/notifications",
              "host": ["{{base_url}}"],
              "path": ["api", "notifications"]
            }
          }
        },
        {
          "name": "Get Unread Notifications Only",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/notifications?unread_only=true",
              "host": ["{{base_url}}"],
              "path": ["api", "notifications"],
              "query": [
                {
                  "key": "unread_only",
                  "value": "true"
                }
              ]
            }
          }
        },
        {
          "name": "Get Unread Count",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/notifications/unread-count",
              "host": ["{{base_url}}"],
              "path": ["api", "notifications", "unread-count"]
            }
          }
        },
        {
          "name": "Mark Notification as Read",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/notifications/1/read",
              "host": ["{{base_url}}"],
              "path": ["api", "notifications", "1", "read"]
            }
          }
        },
        {
          "name": "Mark All as Read",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/notifications/read-all",
              "host": ["{{base_url}}"],
              "path": ["api", "notifications", "read-all"]
            }
          }
        },
        {
          "name": "Delete Notification",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/notifications/1",
              "host": ["{{base_url}}"],
              "path": ["api", "notifications", "1"]
            }
          }
        }
      ]
    },
    {
      "name": "My Recipes",
      "item": [
        {
          "name": "Get My Recipes",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/my-recipes",
              "host": ["{{base_url}}"],
              "path": ["api", "my-recipes"]
            }
          }
        },
        {
          "name": "Search My Recipes",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/my-recipes?search=nasi",
              "host": ["{{base_url}}"],
              "path": ["api", "my-recipes"],
              "query": [
                {
                  "key": "search",
                  "value": "nasi"
                }
              ]
            }
          }
        },
        {
          "name": "Get My Recipe Stats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/my-recipes/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "my-recipes", "stats"]
            }
          }
        }
      ]
    },
    {
      "name": "Explore",
      "description": "üîç **Explore Feature - Recipe Discovery**\n\nDiscover recipes grouped by title similarity and category filtering.\n\n**How it works:**\n- Groups recipes by first word of title (e.g., \"Nasi Goreng\", \"Nasi Uduk\" ‚Üí \"Nasi\" group)\n- Minimum 2 recipes per group (configurable)\n- Supports pagination, search, and sorting\n- Category filtering available\n\n**Parameters:**\n- `page`: Page number (default: 1)\n- `per_page`: Items per page (default: 12, max: 50)\n- `search`: Search keyword in group names\n- `sort_by`: count (most recipes), name (alphabetical), recent (latest recipes)\n- `min_recipes`: Minimum recipes per group (default: 2)\n\n**Workflow:**\n1. Use `/api/explore/groups` for all categories\n2. Use `/api/explore/category/{category}` for specific category\n3. Use `/api/explore/groups/{keyword}` for specific group details",
      "item": [
        {
          "name": "Get All Recipe Groups",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/explore/groups",
              "host": ["{{base_url}}"],
              "path": ["api", "explore", "groups"]
            },
            "description": "üîç Get all recipe groups with default settings\n\n**Default Response:**\n- 12 groups per page\n- Sorted by recipe count (descending)\n- Minimum 2 recipes per group\n- All categories included"
          }
        },
        {
          "name": "Get Recipe Groups with Pagination",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/explore/groups?page=1&per_page=6&sort_by=count&min_recipes=2",
              "host": ["{{base_url}}"],
              "path": ["api", "explore", "groups"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "per_page",
                  "value": "6",
                  "description": "Groups per page (max: 50)"
                },
                {
                  "key": "sort_by",
                  "value": "count",
                  "description": "Sort: count, name, recent"
                },
                {
                  "key": "min_recipes",
                  "value": "2",
                  "description": "Minimum recipes per group"
                }
              ]
            },
            "description": "üîç Get recipe groups with custom pagination and sorting"
          }
        },
        {
          "name": "Search Recipe Groups",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/explore/groups?search=nasi&sort_by=count",
              "host": ["{{base_url}}"],
              "path": ["api", "explore", "groups"],
              "query": [
                {
                  "key": "search",
                  "value": "nasi",
                  "description": "Search keyword in group names"
                },
                {
                  "key": "sort_by",
                  "value": "count",
                  "description": "Sort by recipe count"
                }
              ]
            },
            "description": "üîç Search for specific recipe groups (e.g., all groups containing 'nasi')"
          }
        },
        {
          "name": "Get Groups by Category - Appetizer",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/explore/category/appetizer",
              "host": ["{{base_url}}"],
              "path": ["api", "explore", "category", "appetizer"]
            },
            "description": "ü•ó Get recipe groups from appetizer category only"
          }
        },
        {
          "name": "Get Groups by Category - Main Course",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/explore/category/main_course",
              "host": ["{{base_url}}"],
              "path": ["api", "explore", "category", "main_course"]
            },
            "description": "üçΩÔ∏è Get recipe groups from main course category only"
          }
        },
        {
          "name": "Get Groups by Category - Dessert",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/explore/category/dessert",
              "host": ["{{base_url}}"],
              "path": ["api", "explore", "category", "dessert"]
            },
            "description": "üç∞ Get recipe groups from dessert category only"
          }
        },
        {
          "name": "Get Category Groups with Filters",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/explore/category/main_course?page=1&per_page=10&search=ayam&sort_by=name&min_recipes=3",
              "host": ["{{base_url}}"],
              "path": ["api", "explore", "category", "main_course"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "10"
                },
                {
                  "key": "search",
                  "value": "ayam"
                },
                {
                  "key": "sort_by",
                  "value": "name"
                },
                {
                  "key": "min_recipes",
                  "value": "3"
                }
              ]
            },
            "description": "üçΩÔ∏è Get main course groups with filters: search 'ayam', min 3 recipes, sorted by name"
          }
        },
        {
          "name": "Get Specific Group Recipes",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/explore/groups/nasi",
              "host": ["{{base_url}}"],
              "path": ["api", "explore", "groups", "nasi"]
            },
            "description": "üîç Get all recipes in specific group (e.g., all recipes starting with 'Nasi')"
          }
        }
      ]
    },
    {
      "name": "Units System",
      "description": "üìè **Units & Measurements System**\n\nManage ingredient units and measurements for recipes.\n\n**Categories:**\n- **Volume**: ml, liter, gelas, sdm, sdt\n- **Weight**: gram, kg, ons\n- **Count**: buah, potong, lembar, siung\n- **Spices**: sejumput, secukupnya\n\n**Usage:**\n1. Get all units: `/api/units`\n2. Get units for specific ingredient: `/api/bahans/{id}/units`\n3. Use in recipe creation with `bahans[N][unit]` field",
      "item": [
        {
          "name": "Get All Units",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/units",
              "host": ["{{base_url}}"],
              "path": ["api", "units"]
            },
            "description": "üìè Get all available units organized by category\n\n**Response Structure:**\n```json\n{\n  \"volume\": {\n    \"label\": \"Volume\",\n    \"units\": [\"ml\", \"liter\", \"gelas\", \"sdm\", \"sdt\"]\n  },\n  \"weight\": {\n    \"label\": \"Weight/Mass\", \n    \"units\": [\"gram\", \"kg\", \"ons\"]\n  }\n}\n```"
          }
        },
        {
          "name": "Get Units for Specific Ingredient",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/bahans/1/units",
              "host": ["{{base_url}}"],
              "path": ["api", "bahans", "1", "units"]
            },
            "description": "üìè Get applicable units for specific ingredient\n\n**Example Response:**\n```json\n{\n  \"success\": true,\n  \"data\": {\n    \"bahan\": \"Beras\",\n    \"units\": [\"gram\", \"kg\", \"gelas\", \"liter\"]\n  }\n}\n```\n\n**Usage:** Replace '1' with actual ingredient ID from `/api/bahans`"
          }
        }
      ]
    },
    {
      "name": "Master Data",
      "description": "üóÇÔ∏è **Master Data Management**\n\nManage reference data for the recipe system.\n\n**Available Data:**\n- **Ingredients (Bahans)**: All available ingredients with ID and name\n- **Units**: Measurement units for ingredients\n- **Categories**: Recipe categories (appetizer, main_course, dessert)\n\n**Usage Pattern:**\n1. Get ingredients list: `/api/bahans`\n2. Get units system: `/api/units`\n3. Use IDs in recipe creation forms",
      "description": "üìã **Master Data Endpoints**\n\nUse these endpoints to get available tools and ingredients for recipe creation.\n\n**Workflow:**\n1. Call `/api/alats` to get available cooking tools\n2. Call `/api/bahans` to get available ingredients  \n3. Use the IDs from these responses in recipe creation\n\n**Example:**\n- If `/api/alats` returns `{\"id\": 1, \"name\": \"Wajan\"}`\n- Use `alats[0][id]=1` and `alats[0][amount]=1 buah` in recipe creation",
      "item": [
        {
          "name": "Get All Alats (Cooking Tools)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/alats",
              "host": ["{{base_url}}"],
              "path": ["api", "alats"]
            },
            "description": "üìã Get list of all available cooking tools\n\n**Response Example:**\n```json\n[\n  {\"id\": 1, \"name\": \"Wajan\"},\n  {\"id\": 2, \"name\": \"Spatula\"},\n  {\"id\": 3, \"name\": \"Panci\"}\n]\n```\n\n**Usage in Recipe:**\n- Use the `id` in `alats[0][id]`\n- Add quantity in `alats[0][amount]`"
          }
        },
        {
          "name": "Get All Bahans (Ingredients)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/bahans",
              "host": ["{{base_url}}"],
              "path": ["api", "bahans"]
            },
            "description": "ü•¨ Get list of all available ingredients\n\n**Response Example:**\n```json\n[\n  {\"id\": 1, \"name\": \"Nasi\"},\n  {\"id\": 2, \"name\": \"Telur\"},\n  {\"id\": 3, \"name\": \"Kecap Manis\"}\n]\n```\n\n**Usage in Recipe:**\n- Use the `id` in `bahans[0][id]`  \n- Add quantity in `bahans[0][amount]`"
          }
        }
      ]
    },
    {
      "name": "MOORA Recommendations",
      "description": "ü§ñ **MOORA Algorithm - Recipe Recommendation System**\n\n**SPK (Sistem Pendukung Keputusan) untuk Rekomendasi Resep Masakan**\n\n## üìù **Request Format:**\n- Uses **form-data** (consistent with other endpoints)\n- Required: `available_ingredients[]` array, `min_cooking_time`, `max_cooking_time`\n- No authentication required for easy testing\n\n## üßÆ **Algorithm Details:**\n\n### **Required Fields:**\n- `available_ingredients[0]`, `available_ingredients[1]`, etc.: Ingredient IDs you have\n- `min_cooking_time`: Minimum cooking time in minutes\n- `max_cooking_time`: Maximum cooking time in minutes\n\n### **MOORA Formula:**\n1. **Ingredient Match Ratio**: `Available_Ingredients / Total_Recipe_Ingredients`\n2. **Time Efficiency**: Preference scoring within specified time range\n3. **MOORA Score**: `(ingredient_score √ó 0.7) + (time_score √ó 0.3)`\n4. **Filtering**: Minimum score 0.3, maximum 10 results\n\n### **Criteria Weights:**\n- ü•¨ **Ingredient Weight**: 70% (prioritas utama)\n- ‚è±Ô∏è **Time Weight**: 30% (pertimbangan sekunder)\n- üéØ **Score Threshold**: 0.3 (minimum untuk rekomendasi)\n- üìä **Max Results**: 10 (optimal user experience)\n\n### **Example Input:**\n- Available ingredients: [1, 2, 3, 4, 5] (from `/api/bahans`)\n- Time range: 10-30 minutes\n\n### **Response Fields:**\n- `moora_score`: Objective ranking score (0-1)\n- `ingredient_match_ratio`: Availability ratio\n- `time_efficiency_score`: Time preference score\n- `cooking_time`: Recipe cooking time in minutes\n\n### **Workflow:**\n1. Get ingredient IDs from `/api/bahans`\n2. Use those IDs in `available_ingredients[]` array\n3. Set desired cooking time range\n4. Get ranked recipe recommendations",
      "item": [
        {
          "name": "Get MOORA Recommendations",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "available_ingredients[0]",
                  "value": "1",
                  "type": "text",
                  "description": "ID bahan yang tersedia (contoh: Nasi)"
                },
                {
                  "key": "available_ingredients[1]",
                  "value": "2",
                  "type": "text",
                  "description": "ID bahan yang tersedia (contoh: Telur)"
                },
                {
                  "key": "available_ingredients[2]",
                  "value": "3",
                  "type": "text",
                  "description": "ID bahan yang tersedia (contoh: Kecap Manis)"
                },
                {
                  "key": "available_ingredients[3]",
                  "value": "4",
                  "type": "text",
                  "description": "ID bahan yang tersedia (contoh: Bawang Merah)"
                },
                {
                  "key": "available_ingredients[4]",
                  "value": "5",
                  "type": "text",
                  "description": "ID bahan yang tersedia (contoh: Cabai)"
                },
                {
                  "key": "min_cooking_time",
                  "value": "10",
                  "type": "text",
                  "description": "Waktu memasak minimum (menit)"
                },
                {
                  "key": "max_cooking_time",
                  "value": "30",
                  "type": "text",
                  "description": "Waktu memasak maksimum (menit)"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/recommendations/moora",
              "host": ["{{base_url}}"],
              "path": ["api", "recommendations", "moora"]
            },
            "description": "ü§ñ **Get recipe recommendations using MOORA algorithm**\n\n**Required Fields:**\n- `available_ingredients[]`: Array of ingredient IDs that you have\n- `min_cooking_time`: Minimum cooking time in minutes\n- `max_cooking_time`: Maximum cooking time in minutes\n\n**Algorithm Process:**\n1. Filters recipes within time range with matching ingredients\n2. Calculates ingredient match percentage (70% weight)\n3. Evaluates time efficiency preference (30% weight)\n4. Applies MOORA calculation: (ingredient_score √ó 0.7) + (time_score √ó 0.3)\n5. Filters results with minimum score 0.3\n6. Returns top 10 ranked recipes\n\n**Example Response:**\n```json\n{\n  \"success\": true,\n  \"message\": \"MOORA recommendations retrieved successfully\",\n  \"search_criteria\": {\n    \"ingredients_count\": 5,\n    \"ingredient_names\": [\"Nasi\", \"Telur\", \"Kecap Manis\"],\n    \"time_range\": \"10-30 menit\"\n  },\n  \"data\": [\n    {\n      \"recipe_id\": 1,\n      \"title\": \"Nasi Goreng Special\",\n      \"moora_score\": 0.85,\n      \"ingredient_match_ratio\": 0.8,\n      \"time_efficiency_score\": 0.9,\n      \"cooking_time\": 15\n    }\n  ]\n}\n```"
          }
        },
        {
          "name": "Get MOORA with More Ingredients",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "available_ingredients[0]",
                  "value": "1",
                  "type": "text"
                },
                {
                  "key": "available_ingredients[1]",
                  "value": "5",
                  "type": "text"
                },
                {
                  "key": "available_ingredients[2]",
                  "value": "10",
                  "type": "text"
                },
                {
                  "key": "available_ingredients[3]",
                  "value": "15",
                  "type": "text"
                },
                {
                  "key": "available_ingredients[4]",
                  "value": "20",
                  "type": "text"
                },
                {
                  "key": "available_ingredients[5]",
                  "value": "25",
                  "type": "text"
                },
                {
                  "key": "available_ingredients[6]",
                  "value": "30",
                  "type": "text"
                },
                {
                  "key": "min_cooking_time",
                  "value": "5",
                  "type": "text"
                },
                {
                  "key": "max_cooking_time",
                  "value": "60",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/recommendations/moora",
              "host": ["{{base_url}}"],
              "path": ["api", "recommendations", "moora"]
            },
            "description": "ü§ñ **Example with more ingredients and wider time range**\n\nThe more ingredients you provide and wider time range, the better the MOORA algorithm can match and rank recipes. This example uses 7 different ingredients with 5-60 minutes cooking time range."
          }
        },
        {
          "name": "MOORA Method Explanation",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/recommendations/method-explanation",
              "host": ["{{base_url}}"],
              "path": ["api", "recommendations", "method-explanation"]
            },
            "description": "üìö **Get detailed explanation of MOORA algorithm**\n\nEducational endpoint that explains:\n- How MOORA algorithm works\n- Mathematical formulas used\n- Criteria weights and their reasoning\n- Step-by-step calculation process\n- Benefits of multi-criteria decision making\n\n**Perfect for:**\n- Understanding the recommendation logic\n- Academic research and documentation\n- System integration planning\n- User education and transparency"
          }
        },
        {
          "name": "Test MOORA Calculation",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/recommendations/test",
              "host": ["{{base_url}}"],
              "path": ["api", "recommendations", "test"]
            },
            "description": "üß™ **Test MOORA calculation with sample data**\n\nDevelopment/debugging endpoint that:\n- Uses predefined test ingredients\n- Shows detailed calculation steps\n- Displays intermediate values\n- Validates algorithm accuracy\n- Returns performance metrics\n\n**Response includes:**\n- Input ingredients and recipes\n- Step-by-step calculations\n- Normalization values\n- Final MOORA scores\n- Execution time and performance data\n\n**Use for:**\n- Algorithm validation\n- Performance testing\n- Debugging calculation issues\n- Understanding internal processes"
          }
        }
      ]
    },
    {
      "name": "Debug Routes",
      "description": "üîß **Debug & Troubleshooting**\n\nUse these endpoints to diagnose connectivity issues, especially when accessing from different devices.\n\n**Cross-Device Access Guide:**\n\n1. **Find Server IP**: Use ipconfig/ifconfig to get your server's IP address\n2. **Update base_url**: Change from localhost to actual IP (e.g., `http://192.168.1.100/luwe/public`)\n3. **Test Connectivity**: Use debug endpoints to verify connection\n4. **Check Firewall**: Ensure port 80/443 is open on server\n5. **XAMPP Config**: Make sure Apache is accessible from network\n\n**Common Issues:**\n- `failed to fetch`: Usually CORS or network connectivity\n- `Connection refused`: Server not accessible from client device\n- `Timeout`: Firewall blocking or wrong IP\n\n**Network Setup:**\n- Server and client must be on same network (WiFi/LAN)\n- Use server's local IP, not localhost/127.0.0.1\n- Test with browser first before API calls",
      "item": [
        {
          "name": "API Debug Test",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/debug",
              "host": ["{{base_url}}"],
              "path": ["api", "debug"]
            },
            "description": "üîç **Basic API connectivity test**\n\nThis endpoint tests:\n- API server is running\n- CORS headers are working\n- Network connectivity\n- Server information\n\n**Expected Response:**\n```json\n{\n  \"status\": \"API working\",\n  \"timestamp\": \"2025-07-16T...\",\n  \"server_ip\": \"192.168.1.100\",\n  \"client_ip\": \"192.168.1.101\",\n  \"cors_enabled\": true\n}\n```\n\n**Troubleshooting:**\n- If this fails, check base_url variable\n- Ensure server IP is correct\n- Try accessing from browser first"
          }
        },
        {
          "name": "CORS Test",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/debug-cors",
              "host": ["{{base_url}}"],
              "path": ["debug-cors"]
            },
            "description": "üåê **CORS-specific connectivity test**\n\nTests CORS headers and cross-origin requests.\n\n**Response includes:**\n- Server and client IP addresses\n- Request headers\n- CORS configuration status\n- Timestamp for latency check\n\n**Use this when:**\n- Getting CORS errors\n- Accessing from different domain/device\n- Browser blocking requests"
          }
        },
        {
          "name": "Create Sample Notifications",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/create-sample-notifications",
              "host": ["{{base_url}}"],
              "path": ["create-sample-notifications"]
            }
          }
        },
        {
          "name": "Debug Profile Pictures",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/debug-profile-picture",
              "host": ["{{base_url}}"],
              "path": ["debug-profile-picture"]
            }
          }
        },
        {
          "name": "Get Image File",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/image/1752591825_27.jpg",
              "host": ["{{base_url}}"],
              "path": ["api", "image", "1752591825_27.jpg"]
            },
            "description": "Test image endpoint - replace filename with actual image filename"
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost/luwe/public"
    },
    {
      "key": "auth_token",
      "value": "your_token_here"
    }
  ]
}
